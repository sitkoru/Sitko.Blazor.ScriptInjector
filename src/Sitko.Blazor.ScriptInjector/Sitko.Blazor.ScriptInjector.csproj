<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.1;net5.0;net6.0</TargetFrameworks>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Authors>George Drak</Authors>
    <Company>Sitko.Ru</Company>
    <Product>Sitko.Blazor.ScriptInjector</Product>
    <Description>Sitko.Blazor.ScriptInjector is library for script injection to Blazor pages</Description>
    <Summary>Sitko.Blazor.ScriptInjector is library for script injection to Blazor pages</Summary>
    <Copyright>Copyright Â© Sitko.ru 2021</Copyright>
    <RepositoryUrl>https://github.com/sitkoru/Sitko.Blazor.ScriptInjector</RepositoryUrl>
    <PackageProjectUrl>https://github.com/sitkoru/Sitko.Blazor.ScriptInjector</PackageProjectUrl>
    <PackageIcon>packageIcon.png</PackageIcon>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="JetBrains.Annotations" Version="2021.2.0"/>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All"/>
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.1' ">
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="5.0.8"/>
  </ItemGroup>


  <ItemGroup Condition=" '$(TargetFramework)' == 'net5.0' ">
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="5.0.8"/>
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net6.0' ">
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="5.0.8"/>
  </ItemGroup>
  
  <ItemGroup>
    <None Include="..\..\LICENSE.md" Pack="true" PackagePath="LICENSE.md"/>
    <None Include="..\..\packageIcon.png" Pack="true" PackagePath="\"/>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="inject.js"/>
  </ItemGroup>
  
  <!-- Workaround for this bug (https://github.com/dotnet/sdk/issues/18148) (replace the analyzer name with the one you need to exclude (filename only, no extension) -->
  <Target Name="RemoveLoggingAnalyzer" AfterTargets="ResolveLockFileAnalyzers">
    <ItemGroup>
      <Analyzer Remove="@(Analyzer)" Condition="%(FileName) == 'System.Text.Json.SourceGeneration'" />
      <Analyzer Remove="@(Analyzer)" Condition="%(FileName) == 'Microsoft.Extensions.Logging.Generators'" />
    </ItemGroup>
  </Target>
</Project>
